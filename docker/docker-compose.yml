version: '3.8'
services:
  postgres:
    image: postgres:16-alpine
    container_name: postgresql-temelio
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: t3m3l10
      POSTGRES_DB: temelio
    ports:
      - 5432:5432
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    networks:
      - temelio-network
    healthcheck:
        test: ["CMD-SHELL", "pg_isready -d temelio -U postgres"]
        interval: 5s
        timeout: 10s
        retries: 10      

  sendgrid:
    image: ghashange/sendgrid-mock:1.9.2
    container_name: sendgrid-temelio
    ports:
      - "3000:3000"
    environment:
      - API_KEY=sendgrid-temelio
    networks:
      - temelio-network      

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: backend-temelio
    ports:
      - "8080:8080"
    depends_on:
      postgres:
          condition: service_healthy
    environment:
      - DATABASE_HOSTNAME=postgres:5432
      - DATABASE_NAME=temelio
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=t3m3l10
      - SENDGRID_HOST=http://sendgrid:3000
      - SENDGRID_API_KEY=sendgrid-temelio
    networks:
      - temelio-network
    volumes:
      - shared:/shared      

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: frontend-temelio
    ports:
      - "4000:4000"
    depends_on:
      - backend
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:8080
    networks:
      - temelio-network

networks:
  temelio-network:
    driver: bridge     

volumes:
  shared: